apiVersion: sso.apps.tanzu.vmware.com/v1alpha1
kind: AuthServer
metadata:
  name: authserver-1
  namespace: default
  labels:
    name: authserver-1
  annotations:
    sso.apps.tanzu.vmware.com/allow-client-namespaces: default
    sso.apps.tanzu.vmware.com/allow-unsafe-issuer-uri: ""
    sso.apps.tanzu.vmware.com/allow-unsafe-identity-provider: ""
spec:
  tls:
    deactivated: true
  replicas: 1
  tokenSignature:
    signAndVerifyKeyRef:
      name: "authserver-1-signing-key"
  identityProviders:
  - name: my-oidc-provider
    openID:
        issuerURI: https://company.okta.com
        clientID: O2urSBm...
        clientSecretRef:
          name: my-openid-client-secret
        authorizationUri: https://company.okta.com/oauth2/v1/authorize
        tokenUri: https://company.okta.com/oauth2/v1/token
        jwksUri: https://company.okta.com/oauth2/v1/keys
        scopes:
          - "openid"
          - "email"
---
apiVersion: v1
kind: Secret
metadata:
  name: my-openid-client-secret
stringData:
  clientSecret: r-umbRf...
---
apiVersion: secretgen.k14s.io/v1alpha1
kind: RSAKey
metadata:
  name: authserver-1-signing-key
  namespace: default
spec:
  secretTemplate:
    type: Opaque
    stringData:
      key.pem: \$(privateKey)
      pub.pem: \$(publicKey)
---
apiVersion: sso.apps.tanzu.vmware.com/v1alpha1
kind: ClientRegistration
metadata:
  name: client-registration
  namespace: default
spec:
  authServerSelector:
    matchLabels:
      name: authserver-1
  redirectURIs:
  - "http://example-app.default.example.com/login/oauth2/code/auth-client"
  requireUserConsent: false
  clientAuthenticationMethod: none
  authorizationGrantTypes:
    - "client_credentials"
    - "authorization_code"
    - "refresh_token"
  scopes:
  - name: openid
  - name: email
---
apiVersion: services.apps.tanzu.vmware.com/v1alpha1
kind: ResourceClaim
metadata:
  name: auth-client
  namespace: default
spec:
  ref:
    apiVersion: sso.apps.tanzu.vmware.com/v1alpha1
    kind: ClientRegistration
    name: client-registration